// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/Lucasma95/golang-company-api/src/api/core/entities"
	mock "github.com/stretchr/testify/mock"
)

// CountryRepository is an autogenerated mock type for the CountryRepository type
type CountryRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, country
func (_m *CountryRepository) Create(ctx context.Context, country *entities.Country) error {
	ret := _m.Called(ctx, country)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entities.Country) error); ok {
		r0 = rf(ctx, country)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCountryRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewCountryRepository creates a new instance of CountryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCountryRepository(t mockConstructorTestingTNewCountryRepository) *CountryRepository {
	mock := &CountryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
