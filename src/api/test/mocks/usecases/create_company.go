// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	company "github.com/Lucasma95/golang-company-api/src/api/http/contracts/company"

	mock "github.com/stretchr/testify/mock"
)

// CreateCompany is an autogenerated mock type for the CreateCompany type
type CreateCompany struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, request
func (_m *CreateCompany) Execute(ctx context.Context, request *company.CreateCompanyRequest) error {
	ret := _m.Called(ctx, request)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *company.CreateCompanyRequest) error); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCreateCompany interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateCompany creates a new instance of CreateCompany. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateCompany(t mockConstructorTestingTNewCreateCompany) *CreateCompany {
	mock := &CreateCompany{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
