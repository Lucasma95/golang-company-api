// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/Lucasma95/golang-company-api/src/api/core/entities"
	mock "github.com/stretchr/testify/mock"
)

// GetCompanyByID is an autogenerated mock type for the GetCompanyByID type
type GetCompanyByID struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, id
func (_m *GetCompanyByID) Execute(ctx context.Context, id string) (*entities.Company, error) {
	ret := _m.Called(ctx, id)

	var r0 *entities.Company
	if rf, ok := ret.Get(0).(func(context.Context, string) *entities.Company); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Company)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGetCompanyByID interface {
	mock.TestingT
	Cleanup(func())
}

// NewGetCompanyByID creates a new instance of GetCompanyByID. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGetCompanyByID(t mockConstructorTestingTNewGetCompanyByID) *GetCompanyByID {
	mock := &GetCompanyByID{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
