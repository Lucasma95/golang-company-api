// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	country "github.com/Lucasma95/golang-company-api/src/api/http/contracts/country"
	mock "github.com/stretchr/testify/mock"
)

// CreateCountry is an autogenerated mock type for the CreateCountry type
type CreateCountry struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, request
func (_m *CreateCountry) Execute(ctx context.Context, request *country.CreateCountryRequest) error {
	ret := _m.Called(ctx, request)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *country.CreateCountryRequest) error); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCreateCountry interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateCountry creates a new instance of CreateCountry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateCountry(t mockConstructorTestingTNewCreateCountry) *CreateCountry {
	mock := &CreateCountry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
